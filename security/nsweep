#!/usr/bin/env bash
# A script that performs a simple nslookup for provided subnets.
# by Miles Whittaker <mjwhitta@gmail.com>
#
# --------------------------------------------------------------------
# The MIT License (MIT)
#
# Copyright (c) 2018 Miles Whittaker
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# --------------------------------------------------------------------

usage() {
    echo "Usage: ${0/*\//} [OPTIONS]"
    echo
    echo "Run nslookup against subnets"
    echo
    echo "Options:"
    echo "    -d, --dns=IP    Use the specified DNS server"
    echo "    -h, --help      Display this help message"
    echo
    exit $1
}

declare -a args
unset dns

while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift && args+=("$@") && break ;;
        "-d"|"--dns"*)
            case "$1" in
                "--"*"="*) arg="${1#*=}"; [[ -n $arg ]] || usage 1 ;;
                *) shift; [[ $# -gt 0 ]] || usage 1; arg="$1" ;;
            esac
            dns="$arg"
            ;;
        "-h"|"--help") usage 0 ;;
        *) args+=("$1") ;;
    esac
    shift
done
[[ -z ${args[@]} ]] || set -- "${args[@]}"

[[ $# -ne 0 ]] || usage 1

trap exit SIGINT

for subnet in "$@"; do
    for ip in {1..254}; do
        while read name; do
            echo "$subnet.$ip  $name"
        done < <(
            nslookup $subnet.$ip $dns | awk '/name =/ {print $NF}'
        )
    done; unset ip
done; unset subnet
