#!/usr/bin/env bash
# A wrapper script for netstat.
# by Miles Whittaker <mjwhitta@gmail.com>
#
# --------------------------------------------------------------------
# The MIT License (MIT)
#
# Copyright (c) 2018 Miles Whittaker
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# --------------------------------------------------------------------

function netstatplus() {
    case "$(uname -s)" in
        "Darwin") echo "Unsupported OS!" && return 2 ;;
    esac

    for exe in column netstat; do
        if [[ -z $(command -v $exe) ]]; then
            echo "$exe is not installed"
            unset exe
            return 3
        fi
    done; unset exe

    netstatplus_cleanup() {
        unset args cmd help line pid sudo username
        unset -f netstatplus_cleanup netstatplus_usage
    }

    netstatplus_usage() {
        echo "Usage: netstatplus [OPTIONS]"
        echo
        echo "Makes netstat output a little more readable"
        echo
        echo "Options:"
        echo "    -h, --help    Display this help message"
        echo "    -s, --sudo    Run as root"
        echo
        netstatplus_cleanup
    }

    declare -a args
    unset help sudo

    while [[ $# -gt 0 ]]; do
        case "$1" in
            "--") shift && args+=("$@") && break ;;
            "-h"|"--help") help="true" ;;
            "-s"|"--sudo") sudo="sudo" ;;
            *) args+=("$1") ;;
        esac
        shift
    done
    [[ -z ${args[@]} ]] || set -- "${args[@]}"

    [[ -n $help ]] && netstatplus_usage && return 0
    [[ $# -ne 0 ]] && netstatplus_usage && return 1

    while read -r line; do
        case "$line" in
            *"Active Internet connections"*) continue ;;
            *"PID/Program name"*)
                echo -n "$line" | sed -r -e "s/ Address/Address/g" \
                    -e "s#/Program name.*##g" -e "s/ +//g"
                echo "UserCommandLine"
                continue
                ;;
        esac

        echo -n "$line" | sed -r -e "s#[0-9]+/.+##g" \
            -e "s/ +(\-)?//g"
        case "$line" in
            "udp"*"ESTABLISHED"*) ;;
            "udp"*) echo -n "UNCONN" ;;
        esac

        pid="$(
            echo "$line" | grep -Eos "[0-9]+/.*" | cut -d "/" -f 1
        )"
        echo -n "${pid:--}"

        [[ -z $pid ]] && echo && continue

        username="$(ps -o user= --pid $pid)"
        cmd="$(ps -o cmd= --pid $pid)"
        echo "$username$cmd"
    done < <($sudo netstat -anptu 2>/dev/null) | column -s "" -t

    netstatplus_cleanup
}

if [[ -n ${BASH_SOURCE[0]} ]]; then
    case "$0" in
        *"bash") ;;
        *) netstatplus "$@" ;;
    esac
fi
