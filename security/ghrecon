#!/usr/bin/env bash
# A script gathering info about a GitHub site.
# by Miles Whittaker <mjwhitta@gmail.com>
#
# --------------------------------------------------------------------
# The MIT License (MIT)
#
# Copyright (c) 2018 Miles Whittaker
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# --------------------------------------------------------------------

err() { echo -e "${color:+\e[31m}[!] $@\e[0m"; }

errx() { echo -e "${color:+\e[31m}[!] ${@:2}\e[0m"; exit $1; }

good() { echo -e "${color:+\e[32m}[+] $@\e[0m"; }

info() { echo -e "${color:+\e[37m}[*] $@\e[0m"; }

long_opt() {
    local arg shift="0"
    case "$1" in
        "--"*"="*) arg="${1#*=}"; [[ -n $arg ]] || usage 1 ;;
        *) shift="1"; shift; [[ $# -gt 0 ]] || usage 1; arg="$1" ;;
    esac
    echo "$arg"
    return $shift
}

usage() {
    echo "Usage: ${0/*\//} [OPTIONS] github_url"
    echo
    echo "This tool will gather a list of repo/gists from GitHub"
    echo
    echo "To get a TOKEN, go to the settings page of your GitHub"
    echo "account. Click Applications and generate a personal access"
    echo "token."
    echo
    echo "Options:"
    echo "    -a, --access=TOKEN    Use the specified access token"
    echo "    -h, --help            Display this help message"
    echo "    --nocolor             Disable colorized output"
    echo "    -o, --output=FILE     Output to specified file"
    echo "    -s, --socks=SOCKS     Use the specified socks5 proxy"
    echo
    exit $1
}

warn() { echo -e "${color:+\e[33m}[-] $@\e[0m"; }

declare -a args
unset help output socks token
color="true"

# Parse command line options
while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift && args+=("$@") && break ;;
        "-a"|"--access"*) arg="$(long_opt "$@")" || shift
            token="?access_token=$arg"
            ;;
        "-h"|"--help") help="true" ;;
        "--nocolor") unset color ;;
        "-o"|"--output"*) output="$(long_opt "$@")" || shift ;;
        "-s"|"--socks"*) socks="--socks5 $(long_opt "$@")" || shift ;;
        *) args+=("$1") ;;
    esac
    shift
done
[[ -z ${args[@]} ]] || set -- "${args[@]}"

# Check for valid params and missing dependencies
[[ -z $help ]] || usage 0
[[ $# -le 1 ]] || usage 2
for dep in curl; do
    [[ -n $(command -v $dep) ]] || errx 3 "$dep is not installed"
done; unset dep

github="https://github.com/api/v3"
[[ $# -eq 0 ]] || github="$1/api/v3"

curl="curl -s $socks"

for username in $(
    $curl "$github/users$token" | grep "login" | \
    awk -F "\"" '{print $4}' | sort
); do
    # Get all gists
    $curl "$github/users/$username/gists$token" | grep "git_pull" | \
        awk -F "\"" '{print $4}'

    # Get all repos
    $curl "$github/users/$username/repos$token" | \
        grep "clone_url" | awk -F "\"" '{print $4}'
done | tee $output
