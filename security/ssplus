#!/usr/bin/env bash
# A wrapper script for ss.
# by Miles Whittaker <mjwhitta@gmail.com>
#
# --------------------------------------------------------------------
# The MIT License (MIT)
#
# Copyright (c) 2018 Miles Whittaker
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# --------------------------------------------------------------------

function ssplus() {
    case "$(uname -s)" in
        "Darwin") echo "Unsupported OS!"; return 2 ;;
    esac

    for exe in column ss; do
        if [[ -z $(command -v $exe) ]]; then
            echo "$exe is not installed"
            unset exe
            return 3
        fi
    done; unset exe

    ssplus_cleanup() {
        unset args cmd help line pid pids sudo username
        unset -f ssplus_cleanup ssplus_usage
    }

    ssplus_usage() {
        echo "Usage: ssplus [OPTIONS]"
        echo
        echo "Makes ss output a little more readable"
        echo
        echo "Options:"
        echo "    -h, --help    Display this help message"
        echo "    -s, --sudo    Run as root"
        echo
        ssplus_cleanup
    }

    declare -a args
    unset help sudo

    while [[ $# -gt 0 ]]; do
        case "$1" in
            "--") shift && args+=("$@") && break ;;
            "-h"|"--help") help="true" ;;
            "-s"|"--sudo") sudo="sudo" ;;
            *) args+=("$1") ;;
        esac
        shift
    done
    [[ -z ${args[@]} ]] || set -- "${args[@]}"

    [[ -n $help ]] && ssplus_usage && return 0
    [[ $# -ne 0 ]] && ssplus_usage && return 1

    while read -r line; do
        case "$line" in
            *"Local Address:Port"*)
                echo -n "$line" | \
                    sed -r -e "s/ Address:Port/Address/g" \
                    -e "s/ +\$//g" -e "s# +##g"
                echo "PIDUserCommandLine"
                continue
                ;;
        esac

        pids=($(
            echo "$line" | sed "s/pid=//g" | \
            grep -Eos "\([^()]+\)" | cut -d "," -f 2
        ))

        if [[ ${#pids[@]} -eq 0 ]]; then
            echo -n "$line" | sed -r -e "s/users:.*//g" \
                -e "s/ +\$//g" -e "s/ +//g"
            echo "-"
        else
            for pid in "${pids[@]}"; do
                echo -n "$line" | sed -r -e "s/users:.*//g" \
                    -e "s/ +\$//g" -e "s/ +//g"
                echo -n "$pid"
                username="$(ps -o user= --pid $pid)"
                cmd="$(ps -o cmd= --pid $pid)"
                echo "$username$cmd"
            done
        fi
    done < <($sudo ss -anptu) | column -s "" -t

    ssplus_cleanup
}

if [[ -n ${BASH_SOURCE[0]} ]]; then
    case "$0" in
        *"bash") ;;
        *) ssplus "$@" ;;
    esac
fi
