#!/usr/bin/env bash
# A script for summarizing nmap results.
# by Miles Whittaker <mjwhitta@gmail.com>
#
# --------------------------------------------------------------------
# The MIT License (MIT)
#
# Copyright (c) 2018 Miles Whittaker
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# --------------------------------------------------------------------

usage() {
    echo "Usage: ${0/*\//} [OPTIONS] [host1]... [hostN]"
    echo
    echo "Searches for *.nmap files and greps for open ports"
    echo
    echo "Options:"
    echo "    -h, --help    Display this help message"
    echo
    exit $1
}

declare -a args
unset help
hosts="."

while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift && args+=("$@") && break ;;
        "-h"|"--help") help="true" ;;
        *) args+=("$1") ;;
    esac
    shift
done
[[ -z ${args[@]} ]] || set -- "${args[@]}"

[[ -z $help ]] || usage 0
[[ $# -eq 0 ]] || hosts="$@"

# Hosts with open ports
unset found oldfile
while read -r line; do
    match="${line/*:/}"
    newfile="$(dirname ${line/:*/})"
    found="true"

    if [[ $newfile != $oldfile ]]; then
        [[ -z $oldfile ]] || echo
        echo "# $newfile"
    fi
    echo "$match"

    oldfile="$newfile"
done < <(
    LC_ALL=C find $hosts -type f -name "*.nmap" -exec \
    grep -EHIis "[0-9]+\/.*open.*" {} +
) #| sed -r "s/# \.\//# /" # Piping to sed breaks output

[[ -z $found ]] || echo

# Host with no open ports
unset oldfile
while read -r line; do
    newfile="$(dirname ${line/:*/})"

    if [[ $newfile != $oldfile ]]; then
        [[ -z $oldfile ]] || echo
        echo "# $newfile"
        echo "No open ports"
        echo
    fi

    oldfile="$newfile"
done < <(
    LC_ALL=C find $hosts -type f -name "*.nmap" -exec \
    grep -EHIiLs "[0-9]+\/.*open.*" {} +
) #| sed -r "s/# \.\//# /" # Piping to sed breaks output

echo -en "\e[1A\e[K"
