#!/usr/bin/env bash
# A script for making some ip6tables commands easier.
# by Miles Whittaker <mjwhitta@gmail.com>
#
# --------------------------------------------------------------------
# The MIT License (MIT)
#
# Copyright (c) 2018 Miles Whittaker
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# --------------------------------------------------------------------

function fw6() {
    if [[ -z $(command -v ip6tables) ]]; then
        echo "ip6tables is not installed"
        return 3
    fi

    fw6_cleanup() {
        unset action all arg args chain help tbl tbls
        unset -f fw6_cleanup fw6_clear fw6_close fw6_list fw6_open
        unset -f fw6_reset fw6_usage
    }

    fw6_clear() {
        # Ignore Docker as those should be managed by docker.service

        # Save Docker rules
        sudo ip6tables-save | grep -Ei "^\*|^commit$|docker" \
            >/tmp/fw6.docker.rules

        for tbl in "${tbls[@]}"; do
            while read -r chain; do
                sudo ip6tables -t $tbl -P $chain ACCEPT
            done < <(
                sudo ip6tables -S -t $tbl | awk '/-P/ {print $2}'
            )
            sudo ip6tables -t $tbl -F
            while read -r chain; do
                sudo ip6tables -t $tbl -X $chain
            done < <(
                sudo ip6tables -S -t $tbl | awk '/-N/ {print $2}'
            )
        done

        # Restore Docker rules
        sudo ip6tables-restore </tmp/fw6.docker.rules
        rm -f /tmp/fw6.docker.rules
    }

    fw6_close() {
        sudo ip6tables -D INPUT -p tcp --dport $1 -j ACCEPT
        sudo ip6tables -D INPUT -p udp --dport $1 -j ACCEPT
    }

    fw6_list() {
        for tbl in "${tbls[@]}"; do
            echo "### $tbl ###"
            # Ignore Docker
            if [[ $# -eq 0 ]]; then
                sudo ip6tables -S -t $tbl | grep -iv "docker"
            else
                sudo ip6tables -S -t $tbl
            fi
        done
    }

    fw6_open() {
        sudo ip6tables -I INPUT -p tcp --dport $1 -j ACCEPT
        sudo ip6tables -I INPUT -p udp --dport $1 -j ACCEPT
    }

    fw6_reset() {
        if [[ -f /etc/iptables/ip6tables.rules ]]; then
            fw6_clear
            sudo ip6tables-restore -n </etc/iptables/ip6tables.rules
        fi
    }

    fw6_usage() {
        echo "Usage: fw6 [OPTIONS]"
        echo
        echo "Makes some ip6tables commands easier"
        echo
        echo "Options:"
        echo "    -a, --all           Include Docker rules in output"
        echo "    -h, --help          Display this help message"
        echo "    -c, --close=PORT    Close a previously opened port"
        echo "    --clear             Clear ip6tables rules"
        echo "    -l, --list          List ip6tables rules (default"
        echo "                        behavior)"
        echo "    -o, --open=PORT     Open a port"
        echo "    -r, --reset         Restore default ip6tables rules"
        echo
        fw6_cleanup
    }

    declare -a args tbls
    unset all help
    action="list"
    tbls=($(lsmod | perl -lne '/^ip6table_(\S+)/ && print $1' | sort))
    case "${tbls}" in
        *"filter"*) ;;
        *) tbls=("filter" ${tbls[@]})
    esac

    while [[ $# -gt 0 ]]; do
        case "$1" in
            "--") shift && args+=("$@") && break ;;
            "-a"|"--all") all="true" ;;
            "-c"|"--close"*)
                case "$1" in
                    "--"*"="*)
                        arg="${1#*=}"
                        [[ -z $arg ]] && fw6_usage && return 1
                        ;;
                    *)
                        shift; [[ $# -eq 0 ]] && fw6_usage && return 1
                        arg="$1"
                        ;;
                esac
                action="close"
                port="$arg"
                ;;
            "--clear") action="clear" ;;
            "-h"|"--help") help="true" ;;
            "-l"|"--list") action="list" ;;
            "-o"|"--open"*)
                case "$1" in
                    "--"*"="*)
                        arg="${1#*=}"
                        [[ -z $arg ]] && fw6_usage && return 1
                        ;;
                    *)
                        shift; [[ $# -eq 0 ]] && fw6_usage && return 1
                        arg="$1"
                        ;;
                esac
                action="open"
                port="$arg"
                ;;
            "-r"|"--reset") action="reset" ;;
            *) args+=("$1") ;;
        esac
        shift
    done
    [[ -z ${args[@]} ]] || set -- "${args[@]}"

    [[ -n $help ]] && fw6_usage && return 0
    [[ $# -gt 0 ]] && fw6_usage && return 2

    case "$action" in
        "close") fw6_close $port ;;
        "clear") fw6_clear ;;
        "list") fw6_list $all ;;
        "open") fw6_open $port ;;
        "reset") fw6_reset ;;
    esac

    fw6_cleanup
}

if [[ -n ${BASH_SOURCE[0]} ]]; then
    case "$0" in
        *"bash") ;;
        *) fw6 "$@" ;;
    esac
fi
