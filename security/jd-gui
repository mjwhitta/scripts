#!/usr/bin/env bash

### Helpers begin
check_deps() {
    for d in "${deps[@]}"; do
        [[ -n $(command -v "$d") ]] || errx 128 "$d is not installed"
    done; unset d
}
err() { echo -e "${color:+\e[31m}[!] $*\e[0m"; }
errx() { err "${*:2}"; exit "$1"; }
good() { echo -e "${color:+\e[32m}[+] $*\e[0m"; }
info() { echo -e "${color:+\e[37m}[*] $*\e[0m"; }
long_opt() {
    local arg shift="0"
    case "$1" in
        "--"*"="*) arg="${1#*=}"; [[ -n $arg ]] || usage 127 ;;
        *) shift="1"; shift; [[ $# -gt 0 ]] || usage 127; arg="$1" ;;
    esac
    echo "$arg"
    return $shift
}
subinfo() { echo -e "${color:+\e[36m}[=] $*\e[0m"; }
warn() { echo -e "${color:+\e[33m}[-] $*\e[0m"; }
### Helpers end

usage() {
    cat <<EOF
Usage: ${0##*/} [OPTIONS]

Run JD-GUI.

Options:
    -c, --clear    Clear cache and download new JD-GUI
    -h, --help     Display this help message
    --no-color     Disable colorized output

EOF
    exit "$1"
}

declare -a args deps
unset clear help
color="true"
deps+=("curl")
deps+=("java")

# Check for missing dependencies
check_deps

# Parse command line options
while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift && args+=("$@") && break ;;
        "-c"|"--clear-cache") clear="true" ;;
        "-h"|"--help") help="true" ;;
        "--no-color") unset color ;;
        *) args+=("$1") ;;
    esac
    shift
done
[[ ${#args[@]} -eq 0 ]] || set -- "${args[@]}"

# Check for valid params
[[ -z $help ]] || usage 0
[[ $# -eq 0 ]] || usage 1

cache="$HOME/.cache/jd-gui"
mkdir -p "$cache"

# Clear cached JD-GUI if requested
[[ -z $clear ]] || find "$cache" -name "*.jar" -exec rm -f {} +

# Get JD-GUI if missing
jd="$(find "$cache" -name "jd-gui*.jar" | sort -nr | head -n 1)"
if [[ -z $jd ]]; then
    url="https://github.com"
    path="/java-decompiler/jd-gui/releases"

    path="$(
        curl -Ls "$url$path" | grep -ioPs "java.+\d\.\d\.\d\.jar" | \
        head -n 1
    )"

    [[ -n $path ]] || errx 2 "Failed to download jd-gui jar"

    name="$(basename "$path")"
    curl -Lo "$cache/$name" "$url/$path"
    [[ $? -eq 0 ]] || errx 2 "Failed to download jd-gui jar"

    jd="$(find "$cache" -name "jd-gui*.jar" | sort -nr | head -n 1)"
fi

java -jar "$jd" "$@"
