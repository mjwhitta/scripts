#!/usr/bin/env bash

err() { echo -e "\e[31m[!] $@\e[0m"; }

info() { echo -e "\e[32m[+] $@\e[0m"; }

usage() {
    echo "Usage: ${0/*\//} [OPTIONS]"
    echo
    echo "Use xdotool to fix any special keys that are sticking"
    echo
    echo "Options:"
    echo "    -h, --help    Display this help message"
    echo
    exit $1
}

warn() { echo -e "\e[33m[-] $@\e[0m"; }

declare -a args
unset flag

while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift && args+=("$@") && break ;;
        "-h"|"--help") usage 0 ;;
        *) args+=("$1") ;;
    esac
    shift
done
[[ -z ${args[@]} ]] || set -- "${args[@]}"

[[ $# -eq 0 ]] || usage 1

if [[ -z $(command -v perl) ]]; then
    err "perl is not installed"
    exit 2
fi

if [[ -z $(command -v xdotool) ]]; then
    err "xdotool is not installed"
    exit 3
fi

unset keys
if [[ -f /usr/include/X11/keysymdef.h ]]; then
    keys="$(
        perl -lne '/#define\s+XK_(\S+_(L|R|Level.*))\s/ && print $1' \
        /usr/include/X11/keysymdef.h
    )"
fi
[[ -z $keys ]] || xdotool keyup $keys
