#!/usr/bin/env bash
# A script for quickly taking and storing notes.
# by Miles Whittaker <mjwhitta@gmail.com>
#
# --------------------------------------------------------------------
# The MIT License (MIT)
#
# Copyright (c) 2018 Miles Whittaker
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# --------------------------------------------------------------------

function notes() {
    notes_cleanup() {
        unset action args notes
        unset -f notes_cleanup notes_usage
    }

    notes_usage() {
        echo "Usage: notes [OPTIONS] [pattern]"
        echo
        echo "Quickly read/write notes"
        echo
        echo "Options:"
        echo "    -c, --cat     Cat the notes"
        echo "    -f, --find    Find notes matching pattern (default)"
        echo "    -h, --help    Display this help message"
        echo "    -n, --new     New notes using pattern as filename"
        echo "    -o, --open    Open notes matching pattern"
        echo
        notes_cleanup
    }

    declare -a args
    action="find"
    notes="$HOME/notes"

    while [[ $# -gt 0 ]]; do
        case "$1" in
            "--") shift && args+=("$@") && break ;;
            "-c"|"--cat") action="cat" ;;
            "-f"|"--find") action="find" ;;
            "-h"|"--help") notes_usage; return 0 ;;
            "-n"|"--new") action="new" ;;
            "-o"|"--open") action="open" ;;
            *) args+=("$1") ;;
        esac
        shift
    done
    [[ -z ${args[@]} ]] || set -- "${args[@]}"

    case "$action" in
        "cat") [[ $# -ne 1 ]] && notes_usage && return 1 ;;
        "find") [[ $# -gt 1 ]] && notes_usage && return 2 ;;
        "new") [[ $# -ne 1 ]] && notes_usage && return 3 ;;
        "open") [[ $# -ne 1 ]] && notes_usage && return 4 ;;
    esac
    [[ ! -d $notes ]] && echo "Directory $notes not found" && return 4

    case "$action" in
        "cat")
            find -L $notes/ -type f -ipath "*$(basename $@)*" \
                -exec cat {} +
            ;;
        "find")
            if [[ $# -eq 0 ]]; then
                find -L $notes/ -type f | \
                    sed -r -e "s#$notes/##g" -e "s/\.md\$//g"
            else
                find -L $notes/ -type f -ipath "*$(basename $@)*" | \
                    sed -r -e "s#$notes/##g" -e "s/\.md\$//g"
            fi
            ;;
        "new")
            case "$@" in
                */*) mkdir -p $notes/$(dirname $@) ;;
            esac
            ${EDITOR:-vi} $notes/$@.md
            ;;
        "open")
            find -L $notes/ -type f -ipath "*$(basename $@)*" \
                -exec ${EDITOR:-vi} {} +
            ;;
    esac

    notes_cleanup
}

if [[ -n ${BASH_SOURCE[0]} ]]; then
    case "$0" in
        *"bash") ;;
        *) notes "$@" ;;
    esac
fi
