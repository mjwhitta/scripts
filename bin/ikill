#!/usr/bin/env bash
# A script for interactively killing processes.
# by Miles Whittaker <mjwhitta@gmail.com>
#
# --------------------------------------------------------------------
# The MIT License (MIT)
#
# Copyright (c) 2018 Miles Whittaker
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# --------------------------------------------------------------------

stop_pid() {
    kill -9 $1 2>/dev/null
}

usage() {
    echo "Usage: ${0/*\//} [OPTIONS] <pattern>"
    echo
    echo "Interactively kill processes"
    echo
    echo "Options:"
    echo "    -h, --help    Display this help message"
    echo
    exit $1
}

declare -a args

while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift && args+=("$@") && break ;;
        "-h"|"--help") usage 0 ;;
        *) args+=("$1") ;;
    esac
    shift
done
[[ -z ${args[@]} ]] || set -- "${args[@]}"

[[ $# -eq 1 ]] || usage 1

# Get list of processes matching pattern
processes="$(
    \ps -o pid,command -u $(whoami) | \grep -Ev "(grep|${0/*\//})" | \
    \grep -i $1
)"

[[ -n $processes ]] || exit 0

# List all processes matching pattern
while read i; do
    echo "$i" | sed "s/^ //"
done < <(echo "$processes")
echo

# Ask about killing each process
ask_all="true"
while read i; do
    pid="$(echo "$i" | perl -lne '/^ *(\d+)/ && print $1')"

    if [[ -n $ask_all ]]; then
        while :; do
            # Prompt whether to kill or not
            read -n 1 -p "Kill $pid? [y/n/a/q/l]: " -s -u 3 answer
            echo

            case "$answer" in
                "a") stop_pid $pid; unset ask_all; break ;;
                "l") stop_pid $pid; exit 0 ;;
                "n") break ;;
                "q") exit 0 ;;
                "y") stop_pid $pid; break ;;
                *) echo "Invalid response, try again!" ;;
            esac
        done
    else
        stop_pid $pid
    fi
done 3<&0 < <(echo "$processes")
