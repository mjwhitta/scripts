#!/usr/bin/env bash
# A script that wraps rofi with env stuff (useful for keybindings).
# by Miles Whittaker <mjwhitta@gmail.com>
#
# --------------------------------------------------------------------
# The MIT License (MIT)
#
# Copyright (c) 2018 Miles Whittaker
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# --------------------------------------------------------------------

err() { echo -e "${color:+\e[31m}[!] $@\e[0m"; }

errx() { echo -e "${color:+\e[31m}[!] ${@:2}\e[0m"; exit $1; }

good() { echo -e "${color:+\e[32m}[+] $@\e[0m"; }

info() { echo -e "${color:+\e[37m}[*] $@\e[0m"; }

long_opt() {
    local arg shift="0"
    case "$1" in
        "--"*"="*) arg="${1#*=}"; [[ -n $arg ]] || usage 1 ;;
        *) shift="1"; shift; [[ $# -gt 0 ]] || usage 1; arg="$1" ;;
    esac
    echo "$arg"
    return $shift
}

usage() {
    echo "Usage: ${0/*\//} [OPTIONS]"
    echo
    echo "Wrapper for rofi"
    echo
    echo "Options:"
    echo "    -h, --help    Display this help message"
    echo "    --nocolor     Disable colorized output"
    echo "    -s, --ssh     Start SSH tab"
    echo
    exit $1
}

warn() { echo -e "${color:+\e[33m}[-] $@\e[0m"; }

declare -a args
unset help
color="true"
tab="run"

# Parse command line options
while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift && args+=("$@") && break ;;
        "-h"|"--help") help="true" ;;
        "--nocolor") unset color ;;
        "-s"|"--ssh") tab="ssh" ;;
        *) args+=("$1") ;;
    esac
    shift
done
[[ -z ${args[@]} ]] || set -- "${args[@]}"

# Check for valid params and missing dependencies
[[ -z $help ]] || usage 0
[[ $# -eq 0 ]] || usage 1

# Ruby
export GEM_HOME="$HOME/.gem/ruby"
export GEM_PATH="$GEM_HOME/gems"

# Go
export GOPATH="$HOME/.go"

# Perl
export PERL_LOCAL_LIB_ROOT="$HOME/.cpan/perl5"

# PATH
# Find dirs that should be in PATH
unset PTH
for dir in \
    $HOME/bin \
    $GEM_HOME/bin \
    $HOME/.local/bin \
    $GOPATH \
    $GOPATH/bin \
    $PERL_LOCAL_LIB_ROOT/bin \
    /usr/local/bin \
    /usr/local/sbin \
    /usr/bin \
    /usr/sbin \
    /bin \
    /sbin \
    /usr/bin/core_perl \
    $HOME/Android/Sdk/platform-tools \
    $HOME/Android/Sdk/tools \
    $HOME/Android/Sdk/tools/bin \
    $HOME/Android/Ndk \
    $HOME/.rvm/bin \
; do
    [[ ! -d $dir ]] || PTH="$PTH:$dir"
done; unset dir

# Find missing from PATH
for dir in $(echo "$PATH" | sed "s|:| |g"); do
    [[ -n $(echo "$PTH" | grep $dir) ]] || PTH="$PTH:$dir"
done; unset dir

# Set PATH
[[ -z $PTH ]] || export PATH="${PTH/:/}"
unset PTH

[[ -z $(command -v rofi) ]] && errx 2 "Please install rofi"

# SSH agent
if [[ -n $(command -v ssh-agent) ]]; then
    [[ -f $HOME/.ssh/agent/env ]] && . $HOME/.ssh/agent/env >/dev/null
fi

rofi -show $tab
