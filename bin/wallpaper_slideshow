#!/usr/bin/env bash
# A script to rotate wallpapers from a specified directory.
# by Miles Whittaker <mjwhitta@gmail.com>
#
# --------------------------------------------------------------------
# The MIT License (MIT)
#
# Copyright (c) 2018 Miles Whittaker
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# --------------------------------------------------------------------

### Helpers begin
check_deps() {
    for d in "${deps[@]}"; do
        [[ -n $(command -v "$d") ]] || errx 128 "$d is not installed"
    done; unset d
}
err() { echo -e "${color:+\e[31m}[!] $*\e[0m"; }
errx() { err "${*:2}"; exit "$1"; }
good() { echo -e "${color:+\e[32m}[+] $*\e[0m"; }
info() { echo -e "${color:+\e[37m}[*] $*\e[0m"; }
long_opt() {
    local arg shift="0"
    case "$1" in
        "--"*"="*) arg="${1#*=}"; [[ -n $arg ]] || usage 127 ;;
        *) shift="1"; shift; [[ $# -gt 0 ]] || usage 127; arg="$1" ;;
    esac
    echo "$arg"
    return $shift
}
subinfo() { echo -e "${color:+\e[36m}[=] $*\e[0m"; }
warn() { echo -e "${color:+\e[33m}[-] $*\e[0m"; }
### Helpers end

next_wallpaper() {
    local ppid="$(pgrep -fo "^\S*sh\s+$0")"
    pkill -oP "$ppid" sleep
}

usage() {
    cat <<EOF
Usage: ${0##*/} [OPTIONS] [directory]

Rotate wallpaper using images from specified directory or config file.
Currently it uses nitrogen but it could be extended to use other
background setters.

Options:
    -d, --delay=NUM    Rotate image every NUM secs (default: 120)
    -h, --help         Display this help message
    -n, --next         Cycle to the next wallpaper
    --no-color         Disable colorized output
EOF
    exit "$1"
}

declare -a args deps
unset help
action="slideshow"
color="true"
delay="120"
deps+=("pgrep")
deps+=("pkill")
deps+=("nitrogen")

# Check for missing dependencies
check_deps

# Parse command line options
while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift && args+=("$@") && break ;;
        "-d"|"--delay"*) delay="$(long_opt "$@")" || shift ;;
        "-h"|"--help") help="true" ;;
        "-n"|"--next") action="next" ;;
        "--no-color") unset color ;;
        *) args+=("$1") ;;
    esac
    shift
done
[[ ${#args[@]} -eq 0 ]] || set -- "${args[@]}"

# Check for valid params
[[ -z $help ]] || usage 0
[[ $# -le 1 ]] || usage 1

# If --next or instance already running
case "$action" in
    "next") next_wallpaper; exit 0 ;;
esac
if [[ $(pgrep -cf "sh\s+$0") -gt 1 ]]; then
    next_wallpaper
    exit 0
fi

declare -a dirs
if [[ $# -eq 1 ]]; then
    for dir in "$@"; do
        if [[ -d "$dir" ]]; then
            dirs+=("$dir")
        else
            err "$dir doesn't exist"
        fi
    done; unset dir
else
    [[ -f "$HOME/.wallpaper_slideshow_rc" ]] || usage 3
    while read -r dir; do
        if [[ -d "$dir" ]]; then
            dirs+=("$dir")
        else
            err "$dir doesn't exist"
        fi
    done <"$HOME/.wallpaper_slideshow_rc"; unset dir
fi

[[ ${#dirs[@]} -gt 0 ]] || usage 4

while :; do
    while read -r wallpaper; do
        nitrogen --set-scaled --save "$wallpaper"
        sleep "$delay"
    done < <(find "${dirs[@]}" -mindepth 1 -type f | sort -R)
    unset wallpaper
done
