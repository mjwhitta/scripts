#!/usr/bin/env bash
# A script for running git commands in multiple repos.
# by Miles Whittaker <mjwhitta@gmail.com>
#
# --------------------------------------------------------------------
# The MIT License (MIT)
#
# Copyright (c) 2018 Miles Whittaker
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# --------------------------------------------------------------------

function gits() {
    gits_cleanup() {
        unset args help
        unset -f gits_cleanup gits_usage
    }

    gits_usage() {
        echo "Usage: gits [OPTIONS] [do] <command>"
        echo
        echo "Run a command in all git repos below current directory."
        echo "If using \"do\", run shell command, else git command."
        echo
        echo "Options:"
        echo "    -h, --help    Display this help message"
        echo
        gits_cleanup
    }

    declare -a args
    unset help

    while [[ $# -gt 0 ]]; do
        case "$1" in
            "--") shift && args+=("$@") && break ;;
            "-h"|"--help") help="true" ;;
            *) args+=("$1") ;;
        esac
        shift
    done
    [[ -z ${args[@]} ]] || set -- "${args[@]}"

    [[ -n $help ]] && gits_usage && return 0
    [[ $# -eq 0 ]] && gits_usage && return 1

    while read -r repo; do
        (
            echo -e "\e[37m$repo\e[0m"
            \cd "$repo"
            case "$1" in
                "do") shift; sh -c $@ ;;
                *) git $@ ;;
            esac
            echo
        )
    done < <(find . -name ".git" -type d -exec dirname {} + | sort)

    gits_cleanup
}

if [[ -n ${BASH_SOURCE[0]} ]]; then
    case "$0" in
        *"bash") ;;
        *) gits "$@" ;;
    esac
fi
