#!/usr/bin/env bash

### Helpers begin
check_deps() {
    local missing
    for d in "${deps[@]}"; do
        if [[ -z $(command -v "$d") ]]; then
            # Force absolute path
            if [[ ! -e "/$d" ]]; then
                err "$d was not found"
                missing="true"
            fi
        fi
    done; unset d
    [[ -z $missing ]] || exit 128
}
err() { echo -e "${color:+\e[31m}[!] $*${color:+\e[0m}" >&2; }
errx() { err "${*:2}"; exit "$1"; }
good() { echo -e "${color:+\e[32m}[+] $*${color:+\e[0m}"; }
info() { echo -e "${color:+\e[37m}[*] $*${color:+\e[0m}"; }
long_opt() {
    local arg shift="0"
    case "$1" in
        "--"*"="*) arg="${1#*=}"; [[ -n $arg ]] || return 127 ;;
        *) shift="1"; shift; [[ $# -gt 0 ]] || return 127; arg="$1" ;;
    esac
    echo "$arg"
    return "$shift"
}
subinfo() { echo -e "${color:+\e[36m}[=] $*${color:+\e[0m}"; }
warn() { echo -e "${color:+\e[33m}[-] $*${color:+\e[0m}"; }
### Helpers end

usage() {
    cat <<EOF
Usage: ${0##*/} [OPTIONS]

DESCRIPTION
    Interact with Blocky API. You should create a config as follows:

    $ echo "http://<host>:<port>" >~/.config/blocky

OPTIONS
    -d, --disable         Disable Blocky filtering
        --duration=STR    Specify duration for disable
    -e, --enable          Enable Blocky filtering
    -g, --groups=STR      Comma separated groups list to disable
    -h, --help            Display this help message
        --no-color        Disable colorized output
    -r, --refresh         Refresh Blocky lists
    -s, --status          Get Blocky status (default)

EOF
    exit "$1"
}

declare -a args
unset duration groups help
action="status"
color="true"
curl="curl -s"

# Parse command line options
while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift; args+=("$@"); break ;;
        "-d"|"--disable") action="disable" ;;
        "--duration"*) duration="$(long_opt "$@")" ;;
        "-e"|"--enable") action="enable" ;;
        "-g"|"--groups"*) groups="$(long_opt "$@")" ;;
        "-h"|"--help") help="true" ;;
        "--no-color") unset color ;;
        "-r"|"--refresh") action="refresh" ;;
        "-s"|"--status") action="status" ;;
        *) args+=("$1") ;;
    esac
    case "$?" in
        0) ;;
        1) shift ;;
        *) usage "$?" ;;
    esac
    shift
done
[[ ${#args[@]} -eq 0 ]] || set -- "${args[@]}"

# Help info
[[ -z $help ]] || usage 0

# Check for missing dependencies
declare -a deps
deps+=("curl")
deps+=("head")
deps+=("jq")
check_deps

# Check for valid params
[[ $# -eq 0 ]] || usage 1

url="$(head -n 1 "$HOME/.config/blocky" 2>/dev/null)"
[[ -n $url ]] || errx 2 "No configured Blocky URL"

# Create querystring
q="${duration:+duration=$duration}"
q+="${q:+&}${groups:+groups=$groups}"

case "$action" in
    "disable") $curl "$url/api/blocking/disable${q:+?$q}" ;;
    "enable") $curl "$url/api/blocking/enable" ;;
    "refresh") $curl -d "" "$url/api/lists/refresh" ;;
esac

$curl "$url/api/blocking/status" | jq "."
